# Windows Makefile

WIN_INC                 := $(wildcard include/all/*.h) $(wildcard include/windows/*.h)
WIN_SRC_ALL             := $(wildcard src/all/*.cpp)
WIN_SRC_WIN             := $(wildcard src/windows/*.cpp)
WIN_COMPILER            := /usr/bin/x86_64-w64-mingw32-g++
WIN_CPP_OPTS            := -std=c++14 -Wall -pedantic -Werror -c -MMD -D_WIN32 -D_WIN64
WIN_BUILD               := build/win
WIN_DEBUG_CPP_OPTS      := -g -DDEBUG
WIN_DEBUG_DIR_ALL       := $(WIN_BUILD)/debug/all
WIN_DEBUG_DIR_WINDOWS   := $(WIN_BUILD)/debug/windows
WIN_DEBUG_OBJ_ALL       := $(WIN_SRC_ALL:src/all/%.cpp=$(WIN_DEBUG_DIR_ALL)/%.o)
WIN_DEBUG_OBJ_WINDOWS   := $(WIN_SRC_WIN:src/windows/%.cpp=$(WIN_DEBUG_DIR_WINDOWS)/%.o)
WIN_DEBUG_APP           := $(WIN_BUILD)/app-debug.exe
WIN_DEBUG_LIBS          :=
WIN_RELEASE_CPP_OPTS    :=
WIN_RELEASE_DIR_ALL     := $(WIN_BUILD)/release/all
WIN_RELEASE_DIR_WINDOWS := $(WIN_BUILD)/release/windows
WIN_RELEASE_OBJ_ALL     := $(WIN_SRC_ALL:src/all/%.cpp=$(WIN_RELEASE_DIR_ALL)/%.o)
WIN_RELEASE_OBJ_WINDOWS := $(WIN_SRC_WIN:src/win/%.cpp=$(WIN_RELEASE_DIR_WINDOWS)/%.o)
WIN_RELEASE_APP         := $(WIN_BUILD)/app.exe
WIN_RELEASE_LIBS        :=

# Default target
.PHONY: windows-all
windows-all: $(WIN_DEBUG_APP) $(WIN_RELEASE_APP)

# Debug app
$(WIN_DEBUG_APP): $(WIN_DEBUG_OBJ_ALL) $(WIN_DEBUG_OBJ_WINDOWS)
	$(WIN_COMPILER) -o $@ $(WIN_DEBUG_OBJ_ALL) $(WIN_DEBUG_LIBS)

$(WIN_DEBUG_DIR_ALL)/%.o: $(WIN_SRC_ALL) $(WIN_DEBUG_DIR_ALL)
	$(WIN_COMPILER) $(WIN_CPP_OPTS) $(WIN_DEBUG_CPP_OPTS) $< -o $@

$(WIN_DEBUG_DIR_WINDOWS)/%.o: $(WIN_SRC_WIN) $(WIN_DEBUG_DIR_WINDOWS)
	$(WIN_COMPILER) $(WIN_CPP_OPTS) $(WIN_DEBUG_CPP_OPTS) $< -o $@

$(WIN_DEBUG_DIR_ALL):
	mkdir -p $@

$(WIN_DEBUG_DIR_WINDOWS):
	mkdir -p $@

# Release app
$(WIN_RELEASE_APP): $(WIN_RELEASE_OBJ_ALL) $(WIN_RELEASE_OBJ_WINDOWS)
	$(WIN_COMPILER) -o $@ $(WIN_RELEASE_OBJ_ALL) $(WIN_RELEASE_LIBS)

$(WIN_RELEASE_DIR_ALL)/%.o: $(WIN_SRC_ALL) $(WIN_RELEASE_DIR_ALL)
	$(WIN_COMPILER) $(WIN_CPP_OPTS) $(WIN_RELEASE_CPP_OPTS) $< -o $@

$(WIN_RELEASE_DIR_WINDOWS)/%.o: $(WIN_SRC_WIN) $(WIN_RELEASE_DIR_WINDOWS)
	$(WIN_COMPILER) $(WIN_CPP_OPTS) $(WIN_RELEASE_CPP_OPTS) $< -o $@

$(WIN_RELEASE_DIR_ALL):
	mkdir -p $@

$(WIN_RELEASE_DIR_WINDOWS):
	mkdir -p $@

# Clean the win artifacts only
.PHONY: win-clean
windows-clean:
	rm -rf $(WIN_BUILD) || :

# Generate the echo lines for win-vars target
# This target shd be run if any vars are added or removed.
# It modifies this makefile, assuming that all lines beginning with >
# are at the end of the file.
.PHONY: windows-vars-generate
.SILENT: windows-vars-generate
windows-vars-generate:
	mf='Makefile.windows'; \
	sed -i '/^>/,$$d' $$mf; \
	echo '>echo "==== Windows vars ===="' >> $$mf; \
	grep '^[A-Z][A-Z]* *:=' $$mf | \
	sed -r 's/([^ ]*)( *):=.*/>echo "\1\2 = \$$\(\1\)"/' >> $$mf; \
	echo -e "\\n.RECIPEPREFIX =" >> $$mf

.PHONY: windows-vars
.SILENT: windows-vars
.RECIPEPREFIX = >
windows-vars:
>echo "==== Windows vars ===="
>echo "WIN_INC                  = $(WIN_INC)"
>echo "WIN_SRC_ALL              = $(WIN_SRC_ALL)"
>echo "WIN_SRC_WIN              = $(WIN_SRC_WIN)"
>echo "WIN_COMPILER             = $(WIN_COMPILER)"
>echo "WIN_CPP_OPTS             = $(WIN_CPP_OPTS)"
>echo "WIN_BUILD                = $(WIN_BUILD)"
>echo "WIN_DEBUG_CPP_OPTS       = $(WIN_DEBUG_CPP_OPTS)"
>echo "WIN_DEBUG_DIR_ALL        = $(WIN_DEBUG_DIR_ALL)"
>echo "WIN_DEBUG_DIR_WINDOWS    = $(WIN_DEBUG_DIR_WINDOWS)"
>echo "WIN_DEBUG_OBJ_ALL        = $(WIN_DEBUG_OBJ_ALL)"
>echo "WIN_DEBUG_OBJ_WINDOWS    = $(WIN_DEBUG_OBJ_WINDOWS)"
>echo "WIN_DEBUG_APP            = $(WIN_DEBUG_APP)"
>echo "WIN_DEBUG_LIBS           = $(WIN_DEBUG_LIBS)"
>echo "WIN_RELEASE_CPP_OPTS     = $(WIN_RELEASE_CPP_OPTS)"
>echo "WIN_RELEASE_DIR_ALL      = $(WIN_RELEASE_DIR_ALL)"
>echo "WIN_RELEASE_DIR_WINDOWS  = $(WIN_RELEASE_DIR_WINDOWS)"
>echo "WIN_RELEASE_OBJ_ALL      = $(WIN_RELEASE_OBJ_ALL)"
>echo "WIN_RELEASE_OBJ_WINDOWS  = $(WIN_RELEASE_OBJ_WINDOWS)"
>echo "WIN_RELEASE_APP          = $(WIN_RELEASE_APP)"
>echo "WIN_RELEASE_LIBS         = $(WIN_RELEASE_LIBS)"

.RECIPEPREFIX =
